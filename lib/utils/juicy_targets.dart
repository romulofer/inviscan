final juicyTerms = [
  "dev",
  "dev1",
  "dev2",
  "dev3",
  "development",
  "test",
  "testing",
  "qa",
  "staging",
  "hml",
  "sandbox",
  "demo",
  "preview",
  "beta",
  "alpha",
  "preprod",
  "uat",
  "jenkins",
  "git",
  "gitlab",
  "bitbucket",
  "ci",
  "cicd",
  "pipeline",
  "artifactory",
  "nexus",
  "registry",
  "docker",
  "harbor",
  "login",
  "signin",
  "auth",
  "authentication",
  "sso",
  "saml",
  "oauth",
  "register",
  "signup",
  "password",
  "reset",
  "forgot",
  "token",
  "vpn",
  "remote",
  "access",
  "gateway",
  "firewall",
  "admin",
  "adminpanel",
  "manage",
  "dashboard",
  "console",
  "cms",
  "intranet",
  "internal",
  "private",
  "secure",
  "portal",
  "support",
  "help",
  "helpdesk",
  "it",
  "ticket",
  "jira",
  "confluence",
  "servicenow",
  "db",
  "database",
  "mysql",
  "postgres",
  "mongo",
  "sql",
  "redis",
  "api",
  "backend",
  "tools",
  "monitoring",
  "status",
  "uptime",
  "metrics",
  "grafana",
  "prometheus",
  "logs",
  "log",
  "kibana",
  "elastic",
  "public",
  "static",
  "files",
  "uploads",
  "content",
  "assets",
  "media",
  "old",
  "backup",
  "bak",
  "temp",
  "tmp",
  "archive",
];

final juicyRegex = RegExp(
  juicyTerms.map(RegExp.escape).join('|'),
  caseSensitive: false,
);

List<String> identifyJuicyTargets(List<String> urls) {
  return urls.where((url) => juicyRegex.hasMatch(url)).toList();
}
